<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dominik Jelinek on Community Over Code Europe</title>
    <link>https://eu.communityovercode.org/speakers/dominik-jelinek/</link>
    <description>Recent content in Dominik Jelinek on Community Over Code Europe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://eu.communityovercode.org/speakers/dominik-jelinek/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Managing the Camel development lifecycle within VS Code</title>
      <link>https://eu.communityovercode.org/sessions/2024/managing-the-camel-development-lifecycle-within-vs-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eu.communityovercode.org/sessions/2024/managing-the-camel-development-lifecycle-within-vs-code/</guid>
      <description>Apache Camel is the leading open-source integration framework that simplifies the integration of various systems and applications. There exists a comprehensive set of Tooling specifically designed to empower Camel developers in their work with Apache Camel within VS Code. These tools facilitate a seamless and efficient development experience, offering robust support and functionalities tailored to the needs of Camel developers.
In my session I would like to rely on the Extension Pack for Apache Camel which contains a set of specific extensions for Camel but also leverages the VS Code ecosystem.</description>
    </item>
    
  </channel>
</rss>
