<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mallikarjun Venkataswamyreddy on Community Over Code Europe</title>
    <link>https://eu.communityovercode.org/speakers/mallikarjun-venkataswamyreddy/</link>
    <description>Recent content in Mallikarjun Venkataswamyreddy on Community Over Code Europe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://eu.communityovercode.org/speakers/mallikarjun-venkataswamyreddy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multi Tenancy â€” Apache Hbase</title>
      <link>https://eu.communityovercode.org/sessions/2024/multi-tenancy-apache-hbase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eu.communityovercode.org/sessions/2024/multi-tenancy-apache-hbase/</guid>
      <description>Apache HBase is an open-source non-relational distributed database with multiple components such as Zookeeper, JournalNodes, Hmaster, Namenodes, Datanodes, Regionserver. Managing independent clusters for each use case is operationally heavy and sub-optimal utilization of hardware. Hence there is a need for providing a consolidated, managed, multi-tenant HBase cluster with stronger isolation guarantees in many organizations.
In this talk, we are going to talk about how we approached this problem, made tradeoffs and run large scale multi-tenant hbase clusters with strict isolation guarantees.</description>
    </item>
    
  </channel>
</rss>
