<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nicolas Fränkel on Community Over Code Europe</title>
    <link>https://eu.communityovercode.org/speakers/nicolas-frankel/</link>
    <description>Recent content in Nicolas Fränkel on Community Over Code Europe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://eu.communityovercode.org/speakers/nicolas-frankel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The right feature at the right place: the example of authorization</title>
      <link>https://eu.communityovercode.org/sessions/2024/the-right-feature-at-the-right-place-the-example-of-authorization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eu.communityovercode.org/sessions/2024/the-right-feature-at-the-right-place-the-example-of-authorization/</guid>
      <description>All mature tech stacks nowadays offer infrastructure-related capabilities, either a standard lib or in 3rd-party libraries, e.g., rate-limiting and authorization. While it&amp;rsquo;s great to have such features, it&amp;rsquo;s impossible to audit them easily. You&amp;rsquo;d need to be familiar with the stack and dive deep into the code. This approach just doesn&amp;rsquo;t scale,
A well-designed system keeps the right feature at the right place. In this talk, I&amp;rsquo;ll go through all steps toward making your system more easily auditable.</description>
    </item>
    
  </channel>
</rss>
